#include <stdlib.h>
#include <iostream>

//тут создается структура с 2 переменными типа Int
struct TwoInts
{
    int a;
    int b;
};
//тут создается еще одна структура с массивом с размерностью 4 и указателем типа int
struct StructWithArray
{
    int arr[4];
    int* someNumber;
};

int main()
{
    TwoInts i2 = { };
    i2.a = 5;
    i2.b = 7;

    //в переменные первой структуры помещаем значения 5 и 7
    //переменные будут иметь адреса: a - 36, b - 40 и занимать будут 4 байта, 
    //однако 3 байта будут пустыми
    std::cout << i2.a << std::endl;
    std::cout << i2.b << std::endl;

    StructWithArray s = { };
    s.arr[0] = 10;

    StructWithArray s1 = { };
    s1.arr[0] = 15;

    //здесь 1 элемент 1 массива примет значение 10 и будет находится по адресу 44
    //1 элемент 2 массива примет значение 15 и будет по адресу 68
    //оба элемента будут занимать 1 байт

    StructWithArray* sPointer = &s;
    sPointer->arr[0] = 20;
    //тут указатель pointer будет указывать на массив s
    //далее идет перепись значения первого элемента, которое теперь = 20


    std::cout << s.arr[0] << std::endl;
    s.arr[0] = 25;
    std::cout << s.arr[0] << std::endl;
    sPointer->arr[0] = 30;
    std::cout << s.arr[0] << std::endl;
    //cout дает понять что после каждого вывода значения меняются
    //меняем 1 элемент массива на 25, далее через указатель переписываем значение на 30
    //в памяти значение имеет тот же адрес


    sPointer = &s1;
    sPointer->arr[0] = 35;
    std::cout << s.arr[0] << std::endl;
    std::cout << s1.arr[0] << std::endl;
    //тут поинтер указывает на другой массив, после чего переписывается значение
    //первого элемента на 35, после чего идет вывод массивов

    StructWithArray structArray[2] = { };
    structArray[0].arr[3] = 77;
    structArray[1].someNumber = &structArray[0].arr[3];
    //создаем массив из структур с размерн 2, в 4 элемент 1 структуры записываем 77
    //после чего указатель 2 структуры устанавливается на этот элемент

    sPointer = &s;
    int* pointer = &sPointer->arr[3];
    s.arr[3] = 72;
    std::cout << *pointer;
    //споинтер ставим на s, создаем указатель на 4 элемент массива на который
    //указывает споинтер, после чего устанавливаем значение 4 эл-та массива на 72
    //далее следует вывод

    StructWithArray memory;
    memset(&memory, 0, sizeof(StructWithArray));
    //создаем структуру
    //memset - функция, заполняющая всю память нулями, выставляющая байты в 0
    return 0;
    //возвращаем 0 из main()
}